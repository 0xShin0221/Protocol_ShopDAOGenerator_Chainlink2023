/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FunctionsConsumer,
  FunctionsConsumerInterface,
} from "../../../src/chainlink/FunctionsConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySource",
    type: "error",
  },
  {
    inputs: [],
    name: "NoInlineSecrets",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestIsAlreadyPending",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestIsNotPending",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderIsNotRegistry",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "OCRResponse",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "addSimulatedRequestId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum Functions.Location",
            name: "codeLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.Location",
            name: "secretsLocation",
            type: "uint8",
          },
          {
            internalType: "enum Functions.CodeLanguage",
            name: "language",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "secrets",
            type: "bytes",
          },
          {
            internalType: "string[]",
            name: "args",
            type: "string[]",
          },
        ],
        internalType: "struct Functions.Request",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
    ],
    name: "estimateCost",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "secrets",
        type: "bytes",
      },
      {
        internalType: "string[]",
        name: "args",
        type: "string[]",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
    ],
    name: "executeRequest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDONPublicKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "handleOracleFulfillment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestError",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestResponse",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "updateOracleAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001da238038062001da2833981016040819052620000349162000199565b600080546001600160a01b0319166001600160a01b038316178155339081906001600160a01b038216620000af5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600280546001600160a01b0319166001600160a01b0384811691909117909155811615620000e257620000e281620000ec565b50505050620001cb565b6001600160a01b038116331415620001475760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401620000a6565b600380546001600160a01b0319166001600160a01b03838116918217909255600254604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b600060208284031215620001ac57600080fd5b81516001600160a01b0381168114620001c457600080fd5b9392505050565b611bc780620001db6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063bef3a2f011610081578063f2fde38b1161005b578063f2fde38b146101a0578063f7023bb6146101b3578063fffeb84e146101c657600080fd5b8063bef3a2f014610153578063d328a91e14610168578063d4b391751461017057600080fd5b806330bda99d116100b257806330bda99d1461011d57806379ba5097146101305780638da5cb5b1461013857600080fd5b80630ca76175146100d95780631aa46f59146100ee578063277145891461010a575b600080fd5b6100ec6100e73660046113b0565b6101ce565b005b6100f760045481565b6040519081526020015b60405180910390f35b6100f7610118366004611497565b610274565b6100ec61012b366004611597565b610382565b6100ec610398565b6002546040516001600160a01b039091168152602001610101565b61015b610452565b604051610101919061161b565b61015b6104e0565b61018361017e3660046116f1565b61057e565b6040516bffffffffffffffffffffffff9091168152602001610101565b6100ec6101ae366004611803565b610614565b6100ec6101c1366004611803565b610628565b61015b61064e565b60008381526001602052604090205483906001600160a01b03163314610220576040517fa0c5ec6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526001602052604080822080546001600160a01b03191690555182917f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e691a261026e84848461065b565b50505050565b600061027e6106c2565b6102b86040805160c08101909152806000815260200160008152602001600081526020016060815260200160608152602001606081525090565b6102ff6000808c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508795949392505061071e9050565b86156103475761034788888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085939250506107b29050565b84156103615761036161035a8688611820565b82906107f9565b600061036e828686610839565b60048190559b9a5050505050505050505050565b61038a6106c2565b61039482826109ab565b5050565b6003546001600160a01b031633146103f75760405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b600280546001600160a01b0319808216339081179093556003805490911690556040516001600160a01b03909116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6005805461045f9061182d565b80601f016020809104026020016040519081016040528092919081815260200182805461048b9061182d565b80156104d85780601f106104ad576101008083540402835291602001916104d8565b820191906000526020600020905b8154815290600101906020018083116104bb57829003601f168201915b505050505081565b60008054604080517fd328a91e00000000000000000000000000000000000000000000000000000000815290516060936001600160a01b039093169263d328a91e9260048082019391829003018186803b15801561053d57600080fd5b505afa158015610551573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105799190810190611868565b905090565b600080546001600160a01b031663d227d2458561059a88610a2b565b86866040518563ffffffff1660e01b81526004016105bb94939291906118d6565b60206040518083038186803b1580156105d357600080fd5b505afa1580156105e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060b9190611912565b95945050505050565b61061c6106c2565b61062581610cf7565b50565b6106306106c2565b600080546001600160a01b0319166001600160a01b03831617905550565b6006805461045f9061182d565b815161066e9060059060208501906111f4565b5080516106829060069060208401906111f4565b50827f7bab0ec163b5c132c72b8146ac4d6e067e82ed58f8b131150aa71c925891156283836040516106b5929190611940565b60405180910390a2505050565b6002546001600160a01b0316331461071c5760405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016103ee565b565b8051610756576040517f22ce3edd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8383600181111561076957610769611965565b9081600181111561077c5761077c611965565b9052506040840182801561079257610792611965565b908180156107a2576107a2611965565b9052506060909301929092525050565b80516107ea576040517fe889636f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016020830152608090910152565b8051610831576040517ffe936cb700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a090910152565b6000805481906001600160a01b03166328242b048561085788610a2b565b866040518463ffffffff1660e01b81526004016108769392919061197b565b602060405180830381600087803b15801561089057600080fd5b505af11580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c891906119b4565b905060008054906101000a90046001600160a01b03166001600160a01b0316635ab1bd536040518163ffffffff1660e01b815260040160206040518083038186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e91906119cd565b60008281526001602052604080822080546001600160a01b0319166001600160a01b039490941693909317909255905182917f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db891a2949350505050565b60008181526001602052604090205481906001600160a01b0316156109fc576040517f8b457ad200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600090815260016020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6060610a35611278565b8051610a4390610100610da2565b50610a83816040518060400160405280600c81526020017f636f64654c6f636174696f6e0000000000000000000000000000000000000000815250610e1c565b610aa28184600001516001811115610a9d57610a9d611965565b610e3a565b610ae1816040518060400160405280600881526020017f6c616e6775616765000000000000000000000000000000000000000000000000815250610e1c565b610afb8184604001516000811115610a9d57610a9d611965565b610b3a816040518060400160405280600681526020017f736f757263650000000000000000000000000000000000000000000000000000815250610e1c565b610b48818460600151610e1c565b60a08301515115610bee57610b92816040518060400160405280600481526020017f6172677300000000000000000000000000000000000000000000000000000000815250610e1c565b610b9b81610e73565b60005b8360a0015151811015610be457610bd2828560a001518381518110610bc557610bc56119ea565b6020026020010151610e1c565b80610bdc81611a16565b915050610b9e565b50610bee81610e97565b60808301515115610cef57600083602001516001811115610c1157610c11611965565b1415610c49576040517fa80d31f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c88816040518060400160405280600f81526020017f736563726574734c6f636174696f6e0000000000000000000000000000000000815250610e1c565b610ca28184602001516001811115610a9d57610a9d611965565b610ce1816040518060400160405280600781526020017f7365637265747300000000000000000000000000000000000000000000000000815250610e1c565b610cef818460800151610eb5565b515192915050565b6001600160a01b038116331415610d505760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016103ee565b600380546001600160a01b0319166001600160a01b03838116918217909255600254604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b604080518082019091526060815260006020820152610dc2602083611a31565b15610dea57610dd2602083611a31565b610ddd906020611a53565b610de79083611a6a565b91505b602080840183905260405180855260008152908184010181811015610e0e57600080fd5b604052508290505b92915050565b610e298260038351610ebe565b8151610e359082610fdf565b505050565b8151610e479060c2611007565b506103948282604051602001610e5f91815260200190565b604051602081830303815290604052610eb5565b610e7e816004611070565b600181602001818151610e919190611a6a565b90525050565b610ea2816007611070565b600181602001818151610e919190611a53565b610e2982600283515b60178167ffffffffffffffff1611610ee557825161026e9060e0600585901b168317611007565b60ff8167ffffffffffffffff1611610f27578251610f0e906018611fe0600586901b1617611007565b50825161026e9067ffffffffffffffff83166001611087565b61ffff8167ffffffffffffffff1611610f6a578251610f51906019611fe0600586901b1617611007565b50825161026e9067ffffffffffffffff83166002611087565b63ffffffff8167ffffffffffffffff1611610faf578251610f9690601a611fe0600586901b1617611007565b50825161026e9067ffffffffffffffff83166004611087565b8251610fc690601b611fe0600586901b1617611007565b50825161026e9067ffffffffffffffff83166008611087565b6040805180820190915260608152600060208201526110008383845161110c565b9392505050565b604080518082019091526060815260006020820152825151600061102c826001611a6a565b90508460200151821061104d5761104d85611048836002611a82565b6111dd565b8451602083820101858153508051821115611066578181525b5093949350505050565b8151610e3590601f611fe0600585901b1617611007565b60408051808201909152606081526000602082015283515160006110ab8285611a6a565b905085602001518111156110c8576110c886611048836002611a82565b600060016110d886610100611b85565b6110e29190611a53565b90508651828101878319825116178152508051831115611100578281525b50959695505050505050565b604080518082019091526060815260006020820152825182111561112f57600080fd5b835151600061113e8483611a6a565b9050856020015181111561115b5761115b86611048836002611a82565b855180518382016020019160009180851115611175578482525b505050602086015b602086106111b55780518252611194602083611a6a565b91506111a1602082611a6a565b90506111ae602087611a53565b955061117d565b51815160001960208890036101000a0190811690199190911617905250849150509392505050565b81516111e98383610da2565b5061026e8382610fdf565b8280546112009061182d565b90600052602060002090601f0160209004810192826112225760008555611268565b82601f1061123b57805160ff1916838001178555611268565b82800160010185558215611268579182015b8281111561126857825182559160200191906001019061124d565b506112749291506112ad565b5090565b60405180604001604052806112a0604051806040016040528060608152602001600081525090565b8152602001600081525090565b5b8082111561127457600081556001016112ae565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156112fb576112fb6112c2565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561132a5761132a6112c2565b604052919050565b600067ffffffffffffffff82111561134c5761134c6112c2565b50601f01601f191660200190565b600082601f83011261136b57600080fd5b813561137e61137982611332565b611301565b81815284602083860101111561139357600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156113c557600080fd5b83359250602084013567ffffffffffffffff808211156113e457600080fd5b6113f08783880161135a565b9350604086013591508082111561140657600080fd5b506114138682870161135a565b9150509250925092565b60008083601f84011261142f57600080fd5b50813567ffffffffffffffff81111561144757600080fd5b60208301915083602082850101111561145f57600080fd5b9250929050565b803567ffffffffffffffff8116811461147e57600080fd5b919050565b803563ffffffff8116811461147e57600080fd5b60008060008060008060008060a0898b0312156114b357600080fd5b883567ffffffffffffffff808211156114cb57600080fd5b6114d78c838d0161141d565b909a50985060208b01359150808211156114f057600080fd5b6114fc8c838d0161141d565b909850965060408b013591508082111561151557600080fd5b818b0191508b601f83011261152957600080fd5b81358181111561153857600080fd5b8c60208260051b850101111561154d57600080fd5b60208301965080955050505061156560608a01611466565b915061157360808a01611483565b90509295985092959890939650565b6001600160a01b038116811461062557600080fd5b600080604083850312156115aa57600080fd5b82356115b581611582565b946020939093013593505050565b60005b838110156115de5781810151838201526020016115c6565b8381111561026e5750506000910152565b600081518084526116078160208601602086016115c3565b601f01601f19169290920160200192915050565b60208152600061100060208301846115ef565b80356002811061147e57600080fd5b80356001811061147e57600080fd5b600067ffffffffffffffff80841115611667576116676112c2565b8360051b6020611678818301611301565b8681529350908401908084018783111561169157600080fd5b855b838110156116c5578035858111156116ab5760008081fd5b6116b78a828a0161135a565b835250908201908201611693565b50505050509392505050565b600082601f8301126116e257600080fd5b6110008383356020850161164c565b6000806000806080858703121561170757600080fd5b843567ffffffffffffffff8082111561171f57600080fd5b9086019060c0828903121561173357600080fd5b61173b6112d8565b6117448361162e565b81526117526020840161162e565b60208201526117636040840161163d565b604082015260608301358281111561177a57600080fd5b6117868a82860161135a565b60608301525060808301358281111561179e57600080fd5b6117aa8a82860161135a565b60808301525060a0830135828111156117c257600080fd5b6117ce8a8286016116d1565b60a08301525095506117e591505060208601611466565b92506117f360408601611483565b9396929550929360600135925050565b60006020828403121561181557600080fd5b813561100081611582565b600061100036848461164c565b600181811c9082168061184157607f821691505b6020821081141561186257634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561187a57600080fd5b815167ffffffffffffffff81111561189157600080fd5b8201601f810184136118a257600080fd5b80516118b061137982611332565b8181528560208385010111156118c557600080fd5b61060b8260208301602086016115c3565b67ffffffffffffffff851681526080602082015260006118f960808301866115ef565b63ffffffff949094166040830152506060015292915050565b60006020828403121561192457600080fd5b81516bffffffffffffffffffffffff8116811461100057600080fd5b60408152600061195360408301856115ef565b828103602084015261060b81856115ef565b634e487b7160e01b600052602160045260246000fd5b67ffffffffffffffff8416815260606020820152600061199e60608301856115ef565b905063ffffffff83166040830152949350505050565b6000602082840312156119c657600080fd5b5051919050565b6000602082840312156119df57600080fd5b815161100081611582565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611a2a57611a2a611a00565b5060010190565b600082611a4e57634e487b7160e01b600052601260045260246000fd5b500690565b600082821015611a6557611a65611a00565b500390565b60008219821115611a7d57611a7d611a00565b500190565b6000816000190483118215151615611a9c57611a9c611a00565b500290565b600181815b80851115611adc578160001904821115611ac257611ac2611a00565b80851615611acf57918102915b93841c9390800290611aa6565b509250929050565b600082611af357506001610e16565b81611b0057506000610e16565b8160018114611b165760028114611b2057611b3c565b6001915050610e16565b60ff841115611b3157611b31611a00565b50506001821b610e16565b5060208310610133831016604e8410600b8410161715611b5f575081810a610e16565b611b698383611aa1565b8060001904821115611b7d57611b7d611a00565b029392505050565b60006110008383611ae456fea2646970667358221220712b9bf20ef2e2f6d2a8c2b8e414ea0c5a23493d287ad4d25e58eb9d24114d4864736f6c63430008090033";

type FunctionsConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunctionsConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FunctionsConsumer__factory extends ContractFactory {
  constructor(...args: FunctionsConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    oracle: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FunctionsConsumer> {
    return super.deploy(oracle, overrides || {}) as Promise<FunctionsConsumer>;
  }
  override getDeployTransaction(
    oracle: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(oracle, overrides || {});
  }
  override attach(address: string): FunctionsConsumer {
    return super.attach(address) as FunctionsConsumer;
  }
  override connect(signer: Signer): FunctionsConsumer__factory {
    return super.connect(signer) as FunctionsConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunctionsConsumerInterface {
    return new utils.Interface(_abi) as FunctionsConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FunctionsConsumer {
    return new Contract(address, _abi, signerOrProvider) as FunctionsConsumer;
  }
}
