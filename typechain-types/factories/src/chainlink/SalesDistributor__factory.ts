/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SalesDistributor,
  SalesDistributorInterface,
} from "../../../src/chainlink/SalesDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_salesDistributorClient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "orderId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSale",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalProfit",
        type: "uint256",
      },
    ],
    name: "ProfitsDistributed",
    type: "event",
  },
  {
    inputs: [],
    name: "USDC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "orderId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalSale",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalProfit",
            type: "uint256",
          },
        ],
        internalType: "struct SalesDistributor.DistributionDetails",
        name: "distributionDetails",
        type: "tuple",
      },
    ],
    name: "distributeProfits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "getDistributionByNftAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "salesDistributorClient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_salesDistributorClient",
        type: "address",
      },
    ],
    name: "setSalesDistributorClient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalDistributedProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalDistributedSales",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userProfits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c00380380610c0083398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610b14806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063b80202a811610081578063ce261f7b1161005b578063ce261f7b14610214578063ed9c37db14610234578063f2fde38b1461024757600080fd5b8063b80202a8146101b9578063bb09d9b7146101d9578063be354836146101f457600080fd5b8063715018a6116100b2578063715018a61461018b5780638da5cb5b14610195578063aa0a53fd146101a657600080fd5b8063520ab54d146100d957806358e2040d146101155780635e8e7f7314610140575b600080fd5b6101026100e7366004610865565b6001600160a01b031660009081526004602052604090205490565b6040519081526020015b60405180910390f35b600154610128906001600160a01b031681565b6040516001600160a01b03909116815260200161010c565b61017661014e366004610865565b6001600160a01b03166000908152600260209081526040808320546003909252909120549091565b6040805192835260208301919091520161010c565b61019361025a565b005b6000546001600160a01b0316610128565b6101936101b4366004610865565b61026e565b6101026101c7366004610865565b60036020526000908152604090205481565b610128732791bca1f2de4661ed88a30c99a7a9449aa8417481565b610102610202366004610865565b60046020526000908152604090205481565b610102610222366004610865565b60026020526000908152604090205481565b6101936102423660046108f9565b6102a5565b610193610255366004610865565b610709565b610262610799565b61026c60006107f3565b565b610276610799565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461032a5760405162461bcd60e51b815260206004820152602a60248201527f43616c6c6572206973206e6f74207468652073616c657320646973747269627560448201527f746f7220636c69656e740000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b80516040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152732791bca1f2de4661ed88a30c99a7a9449aa84174919060009083906370a082319060240160206040518083038186803b15801561039557600080fd5b505afa1580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd91906109d9565b905083606001518110156104495760405162461bcd60e51b815260206004820152602160248201527f4e6f7420656e6f756768205553444320666f7220646973747269627574696f6e60448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610321565b60005b826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561048557600080fd5b505afa158015610499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bd91906109d9565b811015610644576040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018290526000906001600160a01b03851690636352211e9060240160206040518083038186803b15801561052057600080fd5b505afa158015610534573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055891906109f2565b60608701516040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038084166004830152602482019290925291925086169063a9059cbb90604401602060405180830381600087803b1580156105c457600080fd5b505af11580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc9190610a0f565b5060608601516001600160a01b0382166000908152600460205260408120805490919061062a908490610a47565b9091555082915061063c905081610a5f565b91505061044c565b5060408085015185516001600160a01b031660009081526002602052918220805491929091610674908490610a47565b9091555050606084015184516001600160a01b0316600090815260036020526040812080549091906106a7908490610a47565b9250508190555083600001516001600160a01b03167f81832f05cdba4e5e011cf8718eaec07ad93c568f079c20abb5415acb011e81198560200151866040015187606001516040516106fb93929190610a7a565b60405180910390a250505050565b610711610799565b6001600160a01b03811661078d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610321565b610796816107f3565b50565b6000546001600160a01b0316331461026c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610321565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461079657600080fd5b60006020828403121561087757600080fd5b813561088281610850565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156108c2576108c2610889565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108f1576108f1610889565b604052919050565b6000602080838503121561090c57600080fd5b823567ffffffffffffffff8082111561092457600080fd5b908401906080828703121561093857600080fd5b61094061089f565b823561094b81610850565b8152828401358281111561095e57600080fd5b8301601f8101881361096f57600080fd5b80358381111561098157610981610889565b610993601f8201601f191687016108c8565b935080845288868284010111156109a957600080fd5b80868301878601376000908401860152509283015260408181013590830152606090810135908201529392505050565b6000602082840312156109eb57600080fd5b5051919050565b600060208284031215610a0457600080fd5b815161088281610850565b600060208284031215610a2157600080fd5b8151801515811461088257600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610a5a57610a5a610a31565b500190565b6000600019821415610a7357610a73610a31565b5060010190565b606081526000845180606084015260005b81811015610aa85760208188018101516080868401015201610a8b565b81811115610aba576000608083860101525b5060208301949094525060408101919091526080601f909201601f1916010191905056fea264697066735822122087419662806fcfc63ae3a3a6a0704bd82e27b47a51c5432d3c3f490208e41dfa64736f6c63430008090033";

type SalesDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SalesDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SalesDistributor__factory extends ContractFactory {
  constructor(...args: SalesDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _salesDistributorClient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SalesDistributor> {
    return super.deploy(
      _salesDistributorClient,
      overrides || {}
    ) as Promise<SalesDistributor>;
  }
  override getDeployTransaction(
    _salesDistributorClient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_salesDistributorClient, overrides || {});
  }
  override attach(address: string): SalesDistributor {
    return super.attach(address) as SalesDistributor;
  }
  override connect(signer: Signer): SalesDistributor__factory {
    return super.connect(signer) as SalesDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SalesDistributorInterface {
    return new utils.Interface(_abi) as SalesDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SalesDistributor {
    return new Contract(address, _abi, signerOrProvider) as SalesDistributor;
  }
}
