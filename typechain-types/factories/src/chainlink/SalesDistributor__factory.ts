/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SalesDistributor,
  SalesDistributorInterface,
} from "../../../src/chainlink/SalesDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_salesDistributorClient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "hyphenatedOrderId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSale",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalProfit",
        type: "uint256",
      },
    ],
    name: "ProfitsDistributed",
    type: "event",
  },
  {
    inputs: [],
    name: "USDC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "nftAddress",
            type: "address[]",
          },
          {
            internalType: "string[]",
            name: "hyphenatedOrderIds",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "totalSale",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "totalProfit",
            type: "uint256[]",
          },
        ],
        internalType: "struct SalesDistributor.SaleDetails",
        name: "saleDetails",
        type: "tuple",
      },
    ],
    name: "distributeProfits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "getDistributionByNftAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "salesDistributorClient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_salesDistributorClient",
        type: "address",
      },
    ],
    name: "setSalesDistributorClient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalDistributedProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalDistributedSales",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userProfits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type SalesDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SalesDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SalesDistributor__factory extends ContractFactory {
  constructor(...args: SalesDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _salesDistributorClient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SalesDistributor> {
    return super.deploy(
      _salesDistributorClient,
      overrides || {}
    ) as Promise<SalesDistributor>;
  }
  override getDeployTransaction(
    _salesDistributorClient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_salesDistributorClient, overrides || {});
  }
  override attach(address: string): SalesDistributor {
    return super.attach(address) as SalesDistributor;
  }
  override connect(signer: Signer): SalesDistributor__factory {
    return super.connect(signer) as SalesDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SalesDistributorInterface {
    return new utils.Interface(_abi) as SalesDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SalesDistributor {
    return new Contract(address, _abi, signerOrProvider) as SalesDistributor;
  }
}
